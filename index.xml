<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pieterjd.be</title>
    <link>http://www.pieterjd.be/</link>
    <description>Recent content on pieterjd.be</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 18 Nov 2020 19:18:00 +0200</lastBuildDate>
    
	<atom:link href="http://www.pieterjd.be/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploy Hugo generated site to Github Pages - Part 2</title>
      <link>http://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages-part2/</link>
      <pubDate>Wed, 18 Nov 2020 19:18:00 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages-part2/</guid>
      <description>I still had to run the ./deploy.sh script after committing changes. Not anymore - I&amp;rsquo;m calling this script in a github action being run after a push to master!
Some refactoring was required - I moved the command related to pushing the generating site to a separate script, and this script is called from github actions.
Below is the complete action. Enjoy!
name:BuildandDeployon:push:branches:[master]jobs:build:runs-on:ubuntu-lateststeps:- uses:actions/checkout@v2- name:setuphugouses:peaceiris/actions-hugo@v2with:hugo-version:&amp;#39;0.75.1&amp;#39;- name:buildhugowebsiterun:hugo--minify- name:deploytogithubPagesrun:| cd $GITHUB_WORKSPACEgitconfig--localuser.email&amp;#34;action@github.com&amp;#34;gitconfig--localuser.name&amp;#34;GitHub Action&amp;#34;.</description>
    </item>
    
    <item>
      <title>Adventures with Microsoft Azure</title>
      <link>http://www.pieterjd.be/posts/adventures-with-azure/</link>
      <pubDate>Tue, 03 Nov 2020 14:48:32 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/adventures-with-azure/</guid>
      <description>The last few weeks I spent looking into Microsoft Azure. I followed along with the fundamental learning paths, but I also focused mostly on the spring boot part. Here are some findings.
Azure Spring Cloud workshop The Azure Spring Cloud Workshop is a nice overview how to deploy your spring boot application to Azure.
Take-aways  Something nowhere mentioned is that you get a Eureka Discover compatible server OOTB :) You just need to add the Eureka Discovery Client dependency.</description>
    </item>
    
    <item>
      <title>Hello World - Spring Cloud Version</title>
      <link>http://www.pieterjd.be/posts/hello-world-spring-cloud-version/</link>
      <pubDate>Sat, 17 Oct 2020 09:12:00 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/hello-world-spring-cloud-version/</guid>
      <description>I&amp;rsquo;ve wanting to look into some microservices, but I never got around to it. I stumbled upon Java Brain&amp;rsquo;s Spring boot microservice course, which is a great series of videos explaining all the concepts.
My hello world - Spring Cloud Version contains 3 microservices:
 datetime-service: returns the current datetime salutation-service: returns at random a salutation for male or female persons greeting-service: uses the first 2 services to compose a greeting  Here&amp;rsquo;s a diagram how they all interact with each other: Keypoints Here are some things that stuck into my head after watching the course:</description>
    </item>
    
    <item>
      <title>Tools for Mac OS I use for easier development</title>
      <link>http://www.pieterjd.be/posts/mac-free-tools/</link>
      <pubDate>Sat, 22 Aug 2020 12:10:17 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/mac-free-tools/</guid>
      <description>This is more a note to self so I know what tools to install when I purchase a new laptop :)
Free applications  Rectangle App allows for easy moving and resizing of windows. For instance resize the current window so it takes the left half of the screen, the top 1/3rd of the screen, &amp;hellip; Atom, the famous editor with plenty of plugins - I personally use it when I need to write or program something small and I don&amp;rsquo;t want to fire up a fullblown IDE iTerm2 a more fancy shell with additional info on the git status and so on Postman for testing REST endpoints.</description>
    </item>
    
    <item>
      <title>Get git-commit-id-plugin working with heroku</title>
      <link>http://www.pieterjd.be/posts/heroku-and-git-commit-id-plugin/</link>
      <pubDate>Sun, 09 Aug 2020 21:59:17 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/heroku-and-git-commit-id-plugin/</guid>
      <description>Spring boot offers out-of-the-box support for git-commit-id-plugin, where you can bind git properties to Spring variables. However heroku cannot work with this.
After some reading up, it appears that the hidden .gitsubfolder is not pushed to heroku. Since during build time the git.propertiesfile is generated and saved in the target folder, the git-commit-id-plugin will fail as there is no .gitsubfolder.
Then I stumbled on the heroku-maven-plugin. This plugin allows to build your project locally and then push the artifact to heroku - and that&amp;rsquo;s what I need.</description>
    </item>
    
    <item>
      <title>IntelliJ Find and Replace with regular expressions</title>
      <link>http://www.pieterjd.be/posts/intellij-replace-regex/</link>
      <pubDate>Sun, 10 May 2020 12:16:00 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/intellij-replace-regex/</guid>
      <description>Regular expressions are not my forte, but never the less very useful. Recently I faced this fictional code snippet:
var a = someFunc(b, c); //..... var d = someFunc(b, d); Almost a gazillion of calls to someFunc needed to be replaced with otherFunc. Cue big gasp! As always, IntelliJ is your go-to companion you always can rely on.
I already noticed the regex checkbox in the Find/Replace dialog. Now it&amp;rsquo;s time to put this thing into practice.</description>
    </item>
    
    <item>
      <title>Deploy Hugo generated site to Github Pages</title>
      <link>http://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages/</link>
      <pubDate>Sat, 02 May 2020 20:48:17 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages/</guid>
      <description>Deploying to github pages is not as easy as I thought. I tried several things for building a Github Action workflow, however this is only meant for actions related to the repository in question.
In the end, I follow the approach as mentioned on the Hugo website with a local script. I have pimped it by fetching the latest commit message and the use this message for committing the changes in the generated site.</description>
    </item>
    
    <item>
      <title>Moving from Jekyll to Hugo</title>
      <link>http://www.pieterjd.be/posts/moving-from-jekyll-to-hugo/</link>
      <pubDate>Fri, 01 May 2020 20:54:17 +0200</pubDate>
      
      <guid>http://www.pieterjd.be/posts/moving-from-jekyll-to-hugo/</guid>
      <description>I&amp;rsquo;ve been using Jekyll for a few years now. Main reason to use it, is its nice integration with Github Pages. However the frustrations now have outweighted the advantages.
Not so cool What annoyed me tremendously is getting Jekyll to run. All the ruby issues were hard to solve for me.
Next in line is how to structure the content. As long as you only want to blog, Jekyll is good enough.</description>
    </item>
    
    <item>
      <title>Colors for your presentations</title>
      <link>http://www.pieterjd.be/posts/2019-11-11-colors-for-presentations/</link>
      <pubDate>Mon, 11 Nov 2019 19:13:12 +0000</pubDate>
      
      <guid>http://www.pieterjd.be/posts/2019-11-11-colors-for-presentations/</guid>
      <description>As I will be speaking at the Data Science Leuven meetup this Thursday, I&amp;rsquo;m preparing my slidedeck.
To make it visually more attractive, I&amp;rsquo;ve been looking into color schemes. And this quote was quite interesting:
 Limit yourself to maximum 4 different colors
 In the end I found inspiration from the slideteam website, the &amp;lsquo;Red and Grey&amp;rsquo; color palette.
 Gray : #EFEFEF Darkgray : #7F7F7F Red : #E04556 Darkred : #2B1515  These colors are then combined so there is contrast in the combination.</description>
    </item>
    
    <item>
      <title>Writing SQL for an unfamiliar PHP application</title>
      <link>http://www.pieterjd.be/posts/2019-09-21-writing-sql-for-unfamiliar-php-application/</link>
      <pubDate>Sat, 21 Sep 2019 10:33:12 +0000</pubDate>
      
      <guid>http://www.pieterjd.be/posts/2019-09-21-writing-sql-for-unfamiliar-php-application/</guid>
      <description>As I&amp;rsquo;m currently working for a famous yellow telco with a huge legacy, I recently had to deal with a PHP application. Although there is a PHP dedicated team, we were forced asked to deal with the PHP part as well.
I did have some past experiences with PHP (and to some extend Drupal), so I faced this old dud. Luckily I just needed to spin up a Vagrant box so that was quite easy.</description>
    </item>
    
  </channel>
</rss>