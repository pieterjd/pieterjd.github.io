<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>pieterjd.be</title><link>https://www.pieterjd.be/</link><description>Recent content on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 27 Sep 2022 18:35:55 +0200</lastBuildDate><atom:link href="https://www.pieterjd.be/index.xml" rel="self" type="application/rss+xml"/><item><title>Inject Page via path using Sling Model</title><link>https://www.pieterjd.be/posts/sling-model-inject-page-via-path/</link><pubDate>Tue, 27 Sep 2022 18:35:55 +0200</pubDate><guid>https://www.pieterjd.be/posts/sling-model-inject-page-via-path/</guid><description>A common use-case is configuring a path to a page via a dialog and then fetch the wrapper Page object to retrieve information about that page. And there is a really easy way to do so.
The Cumbersome way Sling models can have a method annotated with the @PostConstruct annotation. This method is called after the sling model has been created and is used to initialise whatever fields you have defined.</description></item><item><title>Debug Maven plugins</title><link>https://www.pieterjd.be/posts/debug-maven-plugin/</link><pubDate>Mon, 12 Sep 2022 20:24:37 +0000</pubDate><guid>https://www.pieterjd.be/posts/debug-maven-plugin/</guid><description>While working on a new project, I ran into an issue when running a Maven plugin connecting to a local web service. The dreaded Service unavailable error message appeared over and over again.
As this project had a complicated setup and running the the curl version of this maven plugin was successful I turned on the debug mode of Maven. Only thing you need to do is add the -Xswitch to your maven command.</description></item><item><title>Sneak Preview of Devoxx.be 2022 talks</title><link>https://www.pieterjd.be/posts/sneak-preview-devoxxbe-2022-talks/</link><pubDate>Thu, 18 Aug 2022 14:26:12 +0000</pubDate><guid>https://www.pieterjd.be/posts/sneak-preview-devoxxbe-2022-talks/</guid><description>Disclaimer: This is a static site. The data is pulled from the cfp.dev API at generation time. This means
this overview is a snapshot at the time this page was generated. There might be changes to the official schedule that are not yet reflected here! styling might be off as the summary can contain inline styling these proposals have not been written by me these talks have been accepted by the program committee but are not guaranteed.</description></item><item><title>Proper JMS conversion to POJOs</title><link>https://www.pieterjd.be/posts/jms-property-name-must-not-be-null/</link><pubDate>Tue, 14 Jun 2022 20:17:40 +0000</pubDate><guid>https://www.pieterjd.be/posts/jms-property-name-must-not-be-null/</guid><description>While looking into Azure Service bus with Spring Boot, I stumbled upon a nasty stacktrace caused by an IllegalArgumentException:
java.lang.IllegalArgumentException: Property name must not be null So what is going on here?
Setup I configured a queue persons on Azure service bus and in my spring boot application I defined a QueueListener using the @JmsListener annotation
@Component public class PersonQueueListener { private static final String QUEUENAME=&amp;#34;persons&amp;#34;; @JmsListener(destination = QUEUENAME) public void receiveMessage(Person person) throws JsonProcessingException { log.</description></item><item><title>Reduce docker ps Output Clutter with AWK</title><link>https://www.pieterjd.be/posts/reduce-docker-ps-clutter-with-awk/</link><pubDate>Thu, 08 Jul 2021 10:45:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/reduce-docker-ps-clutter-with-awk/</guid><description>I&amp;rsquo;m a fan of docker, especially with my brand new macbook - spinning up loads of containers is always fun ðŸ˜€. However when listing the containers, things get a bit unclear. Check the following output:
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES d52c11b67cfe docker.elastic.co/elasticsearch/elasticsearch:7.13.2 &amp;quot;/bin/tini -- /usr/lâ€¦&amp;quot; 2 hours ago Up 2 hours 0.0.0.0:9200-&amp;gt;9200/tcp, :::9200-&amp;gt;9200/tcp, 0.0.0.0:9300-&amp;gt;9300/tcp, :::9300-&amp;gt;9300/tcp vb-bo_elasticsearch_1 76fee05889f0 logstash:7.13.2 &amp;quot;/usr/local/bin/dockâ€¦&amp;quot; 2 hours ago Up 50 minutes 0.0.0.0:5044-&amp;gt;5044/tcp, :::5044-&amp;gt;5044/tcp, 0.</description></item><item><title>Summarize Latest Changes In Your Codebase</title><link>https://www.pieterjd.be/posts/summarize-latest-changes-in-your-codebase/</link><pubDate>Sun, 27 Jun 2021 12:33:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/summarize-latest-changes-in-your-codebase/</guid><description>You are probably familiar with this workflow
work on different stories pull requests are approved and merged deploy changes inform the team For the last part, you check your todo list to get a nice description instead of some mysterious ID. You could do this manually, but this is very time-consuming, not to mention mind-numbing. Scripts to the rescue!
High level approach Fetch the version information of the environment you want to deploy to.</description></item><item><title>Templating as Automation</title><link>https://www.pieterjd.be/posts/templating/</link><pubDate>Sat, 17 Apr 2021 19:33:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/templating/</guid><description>Templating is a powerful tool to save time on tedious tasks!</description></item><item><title>Simple Jackson Deserializer</title><link>https://www.pieterjd.be/posts/simple-jackson-deserializer/</link><pubDate>Wed, 17 Mar 2021 19:51:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/simple-jackson-deserializer/</guid><description>As I was working on some random data with a ZonedDateTime, it turned out Jackson was unable to deserialize it. How come?
Why not use Jackson datetime module? The codebase I was working on, did not support the Jackson datetime module. It was also not possible to add this module as all Jackson related code was provided and the vendor stressed very clearly &amp;lsquo;not to mess things up with other versions&amp;rsquo;.</description></item><item><title>Automate AEM development</title><link>https://www.pieterjd.be/posts/automate-aem-development/</link><pubDate>Mon, 08 Feb 2021 19:31:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/automate-aem-development/</guid><description>When working with AEM, you&amp;rsquo;re confronted with tedious work - writing components with dialogs defined in XML, lots of boiler-plating. Ideal for automation!
Enter your favorite code generator Yeoman, &amp;ldquo;the Web&amp;rsquo;s Scaffolding ToolFor Modern Webapps&amp;rdquo; is great for this purpose. I came to know this when working on some JHipster project.
It&amp;rsquo;s very easy to define generator (eg. generate an AEM component) using templates (renderscript, dialog, &amp;hellip;.)
I&amp;rsquo;ve put things together in the AEM Generator Repo.</description></item><item><title>Minified Javascript in AEM Clientlibs breaks the build</title><link>https://www.pieterjd.be/posts/minified-javascript-in-aem-clientlib/</link><pubDate>Sat, 30 Jan 2021 21:25:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/minified-javascript-in-aem-clientlib/</guid><description>Recently we had to integrate third-party minified javascript and css in an AEM client library. Unfortunatly this broke the build on Adobe Cloud. How did we solve this?
What&amp;rsquo;s the problem? Minification! From our client, we received already minified javascript and styling we needed to integrate in the AEM website. Nothing too difficult, but the build on AEM Cloud finished with errors. On top of that, we could not download the logs, so we really were in the dark here.</description></item></channel></rss>