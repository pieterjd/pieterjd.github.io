<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pieterjd.be</title><link>https://www.pieterjd.be/</link><description>Recent content on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 08 Jul 2021 10:45:00 +0200</lastBuildDate><atom:link href="https://www.pieterjd.be/index.xml" rel="self" type="application/rss+xml"/><item><title>Reduce docker ps Output Clutter with AWK</title><link>https://www.pieterjd.be/posts/reduce-docker-ps-clutter-with-awk/</link><pubDate>Thu, 08 Jul 2021 10:45:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/reduce-docker-ps-clutter-with-awk/</guid><description>I&amp;rsquo;m a fan of docker, especially with my brand new macbook - spinning up loads of containers is always fun ðŸ˜€. However when listing the containers, things get a bit unclear. Check the following output:
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES d52c11b67cfe docker.elastic.co/elasticsearch/elasticsearch:7.13.2 &amp;quot;/bin/tini -- /usr/lâ€¦&amp;quot; 2 hours ago Up 2 hours 0.0.0.0:9200-&amp;gt;9200/tcp, :::9200-&amp;gt;9200/tcp, 0.0.0.0:9300-&amp;gt;9300/tcp, :::9300-&amp;gt;9300/tcp vb-bo_elasticsearch_1 76fee05889f0 logstash:7.13.2 &amp;quot;/usr/local/bin/dockâ€¦&amp;quot; 2 hours ago Up 50 minutes 0.0.0.0:5044-&amp;gt;5044/tcp, :::5044-&amp;gt;5044/tcp, 0.</description></item><item><title>Summarize Latest Changes In Your Codebase</title><link>https://www.pieterjd.be/posts/summarize-latest-changes-in-your-codebase/</link><pubDate>Sun, 27 Jun 2021 12:33:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/summarize-latest-changes-in-your-codebase/</guid><description>You are probably familiar with this workflow
work on different stories pull requests are approved and merged deploy changes inform the team For the last part, you check your todo list to get a nice description instead of some mysterious ID. You could do this manually, but this is very time-consuming, not to mention mind-numbing. Scripts to the rescue!
High level approach Fetch the version information of the environment you want to deploy to.</description></item><item><title>Templating as Automation</title><link>https://www.pieterjd.be/posts/templating/</link><pubDate>Sat, 17 Apr 2021 19:33:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/templating/</guid><description>In this post, I&amp;rsquo;ll cover different examples of what I like to call templating. Doing the same over and over again, but only few parts change each iteration.
Environment Variables While working on integrating an API, I had to authenticate with a Bearer token in the authentication header. These tokens are typically short-lived, so they change multiple times a day.
As part of the integration, I write down the API calls in Typora, a very nice markdown editor.</description></item><item><title>Simple Jackson Deserializer</title><link>https://www.pieterjd.be/posts/simple-jackson-deserializer/</link><pubDate>Wed, 17 Mar 2021 19:51:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/simple-jackson-deserializer/</guid><description>As I was working on some random data with a ZonedDateTime, it turned out Jackson was unable to deserialize it. How come?
Why not use Jackson datetime module? The codebase I was working on, did not support the Jackson datetime module. It was also not possible to add this module as all Jackson related code was provided and the vendor stressed very clearly &amp;lsquo;not to mess things up with other versions&amp;rsquo;.</description></item><item><title>Automate AEM development</title><link>https://www.pieterjd.be/posts/automate-aem-development/</link><pubDate>Mon, 08 Feb 2021 19:31:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/automate-aem-development/</guid><description>When working with AEM, you&amp;rsquo;re confronted with tedious work - writing components with dialogs defined in XML, lots of boiler-plating. Ideal for automation!
Enter your favorite code generator Yeoman, &amp;ldquo;the Web&amp;rsquo;s Scaffolding ToolFor Modern Webapps&amp;rdquo; is great for this purpose. I came to know this when working on some JHipster project.
It&amp;rsquo;s very easy to define generator (eg. generate an AEM component) using templates (renderscript, dialog, &amp;hellip;.)
I&amp;rsquo;ve put things together in the AEM Generator Repo.</description></item><item><title>Minified Javascript in AEM Clientlibs breaks the build</title><link>https://www.pieterjd.be/posts/minified-javascript-in-aem-clientlib/</link><pubDate>Sat, 30 Jan 2021 21:25:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/minified-javascript-in-aem-clientlib/</guid><description>Recently we had to integrate third-party minified javascript and css in an AEM client library. Unfortunatly this broke the build on Adobe Cloud. How did we solve this?
What&amp;rsquo;s the problem? Minification! From our client, we received already minified javascript and styling we needed to integrate in the AEM website. Nothing too difficult, but the build on AEM Cloud finished with errors. On top of that, we could not download the logs, so we really were in the dark here.</description></item><item><title>Automate Angular Material Workflow using Schematics</title><link>https://www.pieterjd.be/posts/automate-angular-material-workflow-with-schematics/</link><pubDate>Sat, 02 Jan 2021 12:22:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/automate-angular-material-workflow-with-schematics/</guid><description>What is this post about? I&amp;rsquo;m a huge fan of the SpringBoot backend - Angular frontend combination. And since my UX/UI skills are very limited, I really enjoy working with angular material, a really nice library of common widgets implemented as Angular components using the material design.
I found myself doing the same thing over and over again:
generate a table component, using the material table schematic create a service with Angular CLI connecting to a SpringBoot backend to retrieve objects, using the typical CRUD methods (getAll, save, delete, &amp;hellip;) create an interface matching the json obtained from the backend Then I suddenly realized:</description></item><item><title>Automate Timesheeting</title><link>https://www.pieterjd.be/posts/automate-timesheeting/</link><pubDate>Sun, 13 Dec 2020 20:54:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/automate-timesheeting/</guid><description>With every job come boring tasks. Number one, by far, is filling out timesheets. And if you are unlucky, as I was in case of the yellow telco, you&amp;rsquo;re dealing with an old dud.
What old dud? I&amp;rsquo;m talking about fusion by Oracle. It has a horrible interface - even entering a single digit is annoying. On top of that, it was an exotic, buggy, beta version - no one wanted to touch it , including Oracle.</description></item><item><title>Deploy Hugo generated site to Github Pages - Part 2</title><link>https://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages-part2/</link><pubDate>Wed, 18 Nov 2020 19:18:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages-part2/</guid><description>I still had to run the ./deploy.sh script after committing changes. Not anymore - I&amp;rsquo;m calling this script in a github action being run after a push to master!
Some refactoring was required - I moved the command related to pushing the generating site to a separate script, and this script is called from github actions.
UPDATE: this did not work at all! I resorted to trying out a lot of push Github Actions but none worked.</description></item><item><title>Adventures with Microsoft Azure</title><link>https://www.pieterjd.be/posts/adventures-with-azure/</link><pubDate>Tue, 03 Nov 2020 14:48:32 +0200</pubDate><guid>https://www.pieterjd.be/posts/adventures-with-azure/</guid><description>The last few weeks I spent looking into Microsoft Azure. I followed along with the fundamental learning paths, but I also focused mostly on the spring boot part. Here are some findings.
Azure Spring Cloud workshop The Azure Spring Cloud Workshop is a nice overview how to deploy your spring boot application to Azure.
Take-aways Something nowhere mentioned is that you get a Eureka Discover compatible server OOTB :) You just need to add the Eureka Discovery Client dependency.</description></item></channel></rss>