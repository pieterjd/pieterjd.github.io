<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git Commit Maven Plugin on pieterjd.be</title><link>http://www.pieterjd.be/tags/git-commit-maven-plugin/</link><description>Recent content in Git Commit Maven Plugin on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 09 Aug 2020 21:59:17 +0200</lastBuildDate><atom:link href="http://www.pieterjd.be/tags/git-commit-maven-plugin/index.xml" rel="self" type="application/rss+xml"/><item><title>Get git-commit-id-plugin working with heroku</title><link>http://www.pieterjd.be/posts/heroku-and-git-commit-id-plugin/</link><pubDate>Sun, 09 Aug 2020 21:59:17 +0200</pubDate><guid>http://www.pieterjd.be/posts/heroku-and-git-commit-id-plugin/</guid><description>Spring boot offers out-of-the-box support for git-commit-id-plugin, where you can bind git properties to Spring variables. However heroku cannot work with this.
After some reading up, it appears that the hidden .gitsubfolder is not pushed to heroku. Since during build time the git.propertiesfile is generated and saved in the target folder, the git-commit-id-plugin will fail as there is no .gitsubfolder.
Then I stumbled on the heroku-maven-plugin. This plugin allows to build your project locally and then push the artifact to heroku - and that&amp;rsquo;s what I need.</description></item></channel></rss>