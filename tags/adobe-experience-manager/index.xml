<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adobe Experience Manager on pieterjd.be</title><link>http://www.pieterjd.be/tags/adobe-experience-manager/</link><description>Recent content in Adobe Experience Manager on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 08 Feb 2021 19:31:00 +0200</lastBuildDate><atom:link href="http://www.pieterjd.be/tags/adobe-experience-manager/index.xml" rel="self" type="application/rss+xml"/><item><title>Automate AEM development</title><link>http://www.pieterjd.be/posts/automate-aem-development/</link><pubDate>Mon, 08 Feb 2021 19:31:00 +0200</pubDate><guid>http://www.pieterjd.be/posts/automate-aem-development/</guid><description>When working with AEM, you&amp;rsquo;re confronted with tedious work - writing components with dialogs defined in XML, lots of boiler-plating. Ideal for automation!
Enter your favorite code generator Yeoman, &amp;ldquo;the Web&amp;rsquo;s Scaffolding ToolFor Modern Webapps&amp;rdquo; is great for this purpose. I came to know this when working on some JHipster project.
It&amp;rsquo;s very easy to define generator (eg. generate an AEM component) using templates (renderscript, dialog, &amp;hellip;.)
I&amp;rsquo;ve put things together in the AEM Generator Repo.</description></item></channel></rss>