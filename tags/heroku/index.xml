<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Heroku on pieterjd.be</title><link>https://www.pieterjd.be/tags/heroku/</link><description>Recent content in Heroku on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 18 Nov 2020 19:18:00 +0200</lastBuildDate><atom:link href="https://www.pieterjd.be/tags/heroku/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy Hugo generated site to Github Pages - Part 2</title><link>https://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages-part2/</link><pubDate>Wed, 18 Nov 2020 19:18:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages-part2/</guid><description>I still had to run the ./deploy.sh script after committing changes. Not anymore - I&amp;rsquo;m calling this script in a github action being run after a push to master!
Some refactoring was required - I moved the command related to pushing the generating site to a separate script, and this script is called from github actions.
UPDATE: this did not work at all! I resorted to trying out a lot of push Github Actions but none worked.</description></item><item><title>Get git-commit-id-plugin working with heroku</title><link>https://www.pieterjd.be/posts/heroku-and-git-commit-id-plugin/</link><pubDate>Sun, 09 Aug 2020 21:59:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/heroku-and-git-commit-id-plugin/</guid><description>Spring boot offers out-of-the-box support for git-commit-id-plugin, where you can bind git properties to Spring variables. However heroku cannot work with this.
After some reading up, it appears that the hidden .gitsubfolder is not pushed to heroku. Since during build time the git.propertiesfile is generated and saved in the target folder, the git-commit-id-plugin will fail as there is no .gitsubfolder.
Then I stumbled on the heroku-maven-plugin. This plugin allows to build your project locally and then push the artifact to heroku - and that&amp;rsquo;s what I need.</description></item><item><title>Deploy Hugo generated site to Github Pages</title><link>https://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages/</link><pubDate>Sat, 02 May 2020 20:48:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/deploy-hugo-site-to-ghpages/</guid><description>Deploying to github pages is not as easy as I thought. I tried several things for building a Github Action workflow, however this is only meant for actions related to the repository in question.
In the end, I follow the approach as mentioned on the Hugo website with a local script. I have pimped it by fetching the latest commit message and the use this message for committing the changes in the generated site.</description></item></channel></rss>