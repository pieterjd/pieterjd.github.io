<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Mockaroo on pieterjd.be</title><link>https://www.pieterjd.be/tags/mockaroo/</link><description>Recent content in Mockaroo on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 10 Jan 2022 12:03:47 +0200</lastBuildDate><atom:link href="https://www.pieterjd.be/tags/mockaroo/index.xml" rel="self" type="application/rss+xml"/><item><title>Mockaroo Intro - Generate Person Data</title><link>https://www.pieterjd.be/posts/mockaroo-intro-generate-person-data/</link><pubDate>Mon, 10 Jan 2022 12:03:47 +0200</pubDate><guid>https://www.pieterjd.be/posts/mockaroo-intro-generate-person-data/</guid><description>As I&amp;rsquo;m looking into GraphQL and Spring Boot, I needed some test data. I didn&amp;rsquo;t feel very creative but I didn&amp;rsquo;t want to settle for user1, user2, &amp;hellip; either. Enter Mockaroo!
Generating Person data Mockaroo offers a wide range of predefined types, such as first name, IBAN, color, email, IP, and what not. For my GraphQL application I just need this:
Field Name Field Mockaroo Type firstName First Name lastName Last Name email Email Next I set the number of rows to 10 and the format to JSON.</description></item></channel></rss>