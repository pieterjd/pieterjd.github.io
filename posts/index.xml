<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on pieterjd.be</title><link>https://www.pieterjd.be/posts/</link><description>Recent content in Posts on pieterjd.be</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 01 Apr 2023 07:46:21 +0200</lastBuildDate><atom:link href="https://www.pieterjd.be/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Disable Cache for Some Components in AEM</title><link>https://www.pieterjd.be/posts/aem-disable-cache-for-some-components/</link><pubDate>Sat, 01 Apr 2023 07:46:21 +0200</pubDate><guid>https://www.pieterjd.be/posts/aem-disable-cache-for-some-components/</guid><description>In a current project, components show information for an authenticated user, meaning this content is dynamic. As a page is cached on the first render, this means that content is no longer dynamic as it always shows the information of the authenticated user at the time of caching.
Possible Solutions The dispatcher support authentication, however we were dealing with authentication that was not integrated into AEM.
Listing all the pages that contains this component and exclude them from caching by the dispatcher is also not the way the go because you then need an exhaustive list of pages containing this component.</description></item><item><title>Authenticated Azure Function App</title><link>https://www.pieterjd.be/posts/azure-authenticated-function-app/</link><pubDate>Thu, 01 Dec 2022 21:57:34 +0000</pubDate><guid>https://www.pieterjd.be/posts/azure-authenticated-function-app/</guid><description>It&amp;rsquo;s really easy to create simple APIs on Azure with App Functions. In some cases, you want to protect them using Authentication. This usually done with an App Registration, that has permissions to access the API. Pretty simple, but not that easy to accomplish. These are the steps how to configure this.
Disclaimer I have very little to no experience with Azure, so I might be stating the obvious.</description></item><item><title>Inject Page via path using Sling Model</title><link>https://www.pieterjd.be/posts/sling-model-inject-page-via-path/</link><pubDate>Tue, 27 Sep 2022 18:35:55 +0200</pubDate><guid>https://www.pieterjd.be/posts/sling-model-inject-page-via-path/</guid><description>&lt;p>A common use-case is configuring a path to a page via a dialog and then fetch the wrapper &lt;code>Page&lt;/code> object to retrieve information about that page. And there is a really easy way to do so.&lt;/p></description></item><item><title>Debug Maven plugins</title><link>https://www.pieterjd.be/posts/debug-maven-plugin/</link><pubDate>Mon, 12 Sep 2022 20:24:37 +0000</pubDate><guid>https://www.pieterjd.be/posts/debug-maven-plugin/</guid><description>While working on a new project, I ran into an issue when running a Maven plugin connecting to a local web service. The dreaded Service unavailable error message appeared over and over again.
As this project had a complicated setup and running the the curl version of this maven plugin was successful I turned on the debug mode of Maven. Only thing you need to do is add the -Xswitch to your maven command.</description></item><item><title>Sneak Preview of Devoxx.be 2022 talks</title><link>https://www.pieterjd.be/posts/sneak-preview-devoxxbe-2022-talks/</link><pubDate>Thu, 18 Aug 2022 14:26:12 +0000</pubDate><guid>https://www.pieterjd.be/posts/sneak-preview-devoxxbe-2022-talks/</guid><description>Disclaimer: TThe data is pulled from the cfp.dev API . This means
this overview is a snapshot at the time this page was update on Oct 11th 2022. There might be changes to the official schedule that are not yet reflected here! styling might be off as the summary can contain inline styling these proposals have not been written by me these talks have been accepted by the program committee but are not guaranteed.</description></item><item><title>Proper JMS conversion to POJOs</title><link>https://www.pieterjd.be/posts/jms-property-name-must-not-be-null/</link><pubDate>Tue, 14 Jun 2022 20:17:40 +0000</pubDate><guid>https://www.pieterjd.be/posts/jms-property-name-must-not-be-null/</guid><description>While looking into Azure Service bus with Spring Boot, I stumbled upon a nasty stacktrace caused by an IllegalArgumentException:
java.lang.IllegalArgumentException: Property name must not be null So what is going on here?
Setup I configured a queue persons on Azure service bus and in my spring boot application I defined a QueueListener using the @JmsListener annotation
@Component public class PersonQueueListener { private static final String QUEUENAME=&amp;#34;persons&amp;#34;; @JmsListener(destination = QUEUENAME) public void receiveMessage(Person person) throws JsonProcessingException { log.</description></item><item><title>Mockaroo Intro - Generate Person Data</title><link>https://www.pieterjd.be/posts/mockaroo-intro-generate-person-data/</link><pubDate>Mon, 10 Jan 2022 12:03:47 +0200</pubDate><guid>https://www.pieterjd.be/posts/mockaroo-intro-generate-person-data/</guid><description>As I&amp;rsquo;m looking into GraphQL and Spring Boot, I needed some test data. I didn&amp;rsquo;t feel very creative but I didn&amp;rsquo;t want to settle for user1, user2, &amp;hellip; either. Enter Mockaroo!
Generating Person data Mockaroo offers a wide range of predefined types, such as first name, IBAN, color, email, IP, and what not. For my GraphQL application I just need this:
Field Name Field Mockaroo Type firstName First Name lastName Last Name email Email Next I set the number of rows to 10 and the format to JSON.</description></item><item><title>Reduce docker ps Output Clutter with AWK</title><link>https://www.pieterjd.be/posts/reduce-docker-ps-clutter-with-awk/</link><pubDate>Thu, 08 Jul 2021 10:45:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/reduce-docker-ps-clutter-with-awk/</guid><description>I&amp;rsquo;m a fan of docker, especially with my brand new macbook - spinning up loads of containers is always fun ðŸ˜€. However when listing the containers, things get a bit unclear. Check the following output:
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES d52c11b67cfe docker.elastic.co/elasticsearch/elasticsearch:7.13.2 &amp;quot;/bin/tini -- /usr/lâ€¦&amp;quot; 2 hours ago Up 2 hours 0.0.0.0:9200-&amp;gt;9200/tcp, :::9200-&amp;gt;9200/tcp, 0.0.0.0:9300-&amp;gt;9300/tcp, :::9300-&amp;gt;9300/tcp vb-bo_elasticsearch_1 76fee05889f0 logstash:7.13.2 &amp;quot;/usr/local/bin/dockâ€¦&amp;quot; 2 hours ago Up 50 minutes 0.0.0.0:5044-&amp;gt;5044/tcp, :::5044-&amp;gt;5044/tcp, 0.</description></item><item><title>Summarize Latest Changes In Your Codebase</title><link>https://www.pieterjd.be/posts/summarize-latest-changes-in-your-codebase/</link><pubDate>Sun, 27 Jun 2021 12:33:00 +0200</pubDate><guid>https://www.pieterjd.be/posts/summarize-latest-changes-in-your-codebase/</guid><description>You are probably familiar with this workflow
work on different stories pull requests are approved and merged deploy changes inform the team For the last part, you check your todo list to get a nice description instead of some mysterious ID. You could do this manually, but this is very time-consuming, not to mention mind-numbing. Scripts to the rescue!
High level approach Fetch the version information of the environment you want to deploy to.</description></item><item><title>Templating as Automation</title><link>https://www.pieterjd.be/posts/templating/</link><pubDate>Sat, 17 Apr 2021 19:33:17 +0200</pubDate><guid>https://www.pieterjd.be/posts/templating/</guid><description>Templating is a powerful tool to save time on tedious tasks!</description></item></channel></rss>